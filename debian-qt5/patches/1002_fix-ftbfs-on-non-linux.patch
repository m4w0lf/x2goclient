Description: Successfully built on Debian GNU/kFreeBSD and Debian GNU/Hurd
Author: Mike Gabriel <mike.gabriel@das-netzwerkteam.de>

--- a/src/clicklineedit.cpp
+++ b/src/clicklineedit.cpp
@@ -31,7 +31,7 @@
 {
 }
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 void ClickLineEdit::mouseReleaseEvent ( QMouseEvent * event )
 {
 	QLineEdit::mouseReleaseEvent(event);
--- a/src/clicklineedit.h
+++ b/src/clicklineedit.h
@@ -31,7 +31,7 @@
 		~ClickLineEdit();
 	signals:
 		void clicked();
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 	protected:
 		virtual void mouseReleaseEvent ( QMouseEvent * event );
 /*		virtual void focusInEvent ( QFocusEvent * event );
--- a/src/editconnectiondialog.cpp
+++ b/src/editconnectiondialog.cpp
@@ -85,7 +85,7 @@
     connect ( sessSet,SIGNAL ( nameChanged ( const QString & ) ),this,
               SLOT ( slot_changeCaption ( const QString& ) ) );
     connect ( this,SIGNAL ( accepted() ),this,SLOT ( slot_accepted() ) );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     connect (sessSet, SIGNAL(directRDP(bool,bool)), this, SLOT(slot_directRDP(bool,bool)));
 
     connect (sessSet,
@@ -112,7 +112,7 @@
         setContentsMargins ( 3,3,3,3 );
     fr->setCurrentIndex ( ind );
     slot_changeCaption(sessSet->sessionName());
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     sessSet->slot_rdpDirectClicked();
 #endif
 }
@@ -171,7 +171,7 @@
     }
 }
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 void EditConnectionDialog::slot_directRDP(bool direct, bool isXDMCP)
 {
     fr->setTabEnabled(1,!direct);
--- a/src/editconnectiondialog.h
+++ b/src/editconnectiondialog.h
@@ -64,7 +64,7 @@
     void slot_changeCaption ( const QString& newName );
     void slot_accepted();
     void slot_default();
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     void slot_directRDP(bool direct, bool isXDMCP);
 #endif
 };
--- a/src/ongetpass.cpp
+++ b/src/ongetpass.cpp
@@ -52,7 +52,7 @@
     QApplication app ( argc,argv );
 
 #ifndef Q_WS_HILDON
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 #if QT_VERSION < 0x050000
     app.setStyle ( new QPlastiqueStyle() );
 #else
--- a/src/onmainwindow.cpp
+++ b/src/onmainwindow.cpp
@@ -62,7 +62,7 @@
     }
 #endif
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     image=shape=0;
 #endif
     x2goInfof(1) << tr("Starting X2Go Client %1...").arg (QString (VERSION));
@@ -152,7 +152,7 @@
     systemDisablePA=false;
 #endif /* defined (Q_OS_DARWIN) || defined (Q_OS_WIN) */
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     directRDP = false;
 #endif /* defined (Q_OS_LINUX) */
 
@@ -235,7 +235,7 @@
     addToAppNames ( "OFFICE",tr ( "OpenOffice.org" ) );
     addToAppNames ( "TERMINAL",tr ( "Terminal" ) );
 
-#ifndef Q_OS_LINUX
+#if defined(Q_OS_DARWIN) || defined(Q_OS_WIN)
 #if QT_VERSION < 0x050000
     widgetExtraStyle = new QPlastiqueStyle ();
 #else
@@ -545,7 +545,7 @@
 
 
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     if (thinMode)
     {
         QTimer *timer = new QTimer(this);
@@ -680,7 +680,7 @@
     {
         if (!isHidden())
             hide();
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
         XSync(QX11Info::display(),false);
 #endif
     }
@@ -1435,7 +1435,7 @@
                                  QVariant ( isMaximized() ) );
         st.setting()->sync();
         x2goDebug<<"Saved settings.";
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
         if (image)
             XFreePixmap(QX11Info::display(),image);
         if (shape)
@@ -2812,7 +2812,7 @@
         autologin=st->setting()->value (
                       sid+"/autologin",
                       ( QVariant ) false ).toBool();
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
         if(command =="XDMCP" && st->setting()->value (
                       sid+"/directxdmcp",
                       ( QVariant ) false ).toBool())
@@ -3423,7 +3423,7 @@
         if (config.brokerNoAuth && brokerNoauthWithSessionUsername) {
             config.brokerUser = login->text();
         }
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
         X2goSettings* st=new X2goSettings(config.iniFile, QSettings::IniFormat);
         QString sid=sessionExplorer->getLastSession()->id();
         QString cmd=st->setting()->value ( sid+"/command",
@@ -3485,7 +3485,7 @@
     sshConnection->executeCommand ( "x2gogetservers", this, SLOT ( slotGetServers ( bool, QString,int ) ));
 }
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 void ONMainWindow::startDirectRDP()
 {
     if (!(sessionExplorer->getLastSession())) {
@@ -3740,7 +3740,7 @@
 {
     connectionType=conType;
     setEnabled ( false );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     directRDP=false;
 #endif
     QString passwd;
@@ -3810,7 +3810,7 @@
                                     ( QVariant ) false ).toBool();
     krbDelegation=st->setting()->value ( sid+"/krbdelegation",
                                          ( QVariant ) false ).toBool();
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     directRDP=(st->setting()->value ( sid+"/directrdp",
                                       ( QVariant ) false ).toBool() && cmd == "RDP");
 
@@ -5236,7 +5236,7 @@
 void ONMainWindow::slotSuspendSess()
 {
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     if (directRDP)
     {
         nxproxy->terminate();
@@ -5314,7 +5314,7 @@
     {
         sendEventToBroker(SUSPENDING);
     }
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     if (directRDP)
     {
         nxproxy->terminate();
@@ -5338,7 +5338,7 @@
 
 void ONMainWindow::slotTermSessFromSt()
 {
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     if (directRDP)
     {
 
@@ -5424,7 +5424,7 @@
 void ONMainWindow::slotTermSess()
 {
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     if (directRDP)
     {
         nxproxy->terminate();
@@ -5844,7 +5844,7 @@
             sshConnection->executeCommand (scmd);
 
             bool sysPulse=false;
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
             loadPulseModuleNativeProtocol();
             QFile file ( "/etc/default/pulseaudio" );
             if ( file.open ( QIODevice::ReadOnly |
@@ -6511,7 +6511,7 @@
 
 void ONMainWindow::slotProxyError ( QProcess::ProcessError err )
 {
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     if(err==QProcess::FailedToStart && directRDP)
     {
         QString main_text = tr("Failed to start RDP or XDMCP client");
@@ -6614,7 +6614,7 @@
             }
         }
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
         if (directRDP)
             nxproxy=0;
 #endif
@@ -6627,7 +6627,7 @@
     nxproxy=0l;
     proxyWinId=0;
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     if (directRDP)
     {
         if (closeDisconnect)
@@ -9937,7 +9937,7 @@
     return false;
 }
 
-#ifndef Q_OS_LINUX
+#if defined(Q_OS_WIN) || defined(Q_OS_DARWIN)
 void ONMainWindow::setWidgetStyle ( QWidget* widget )
 {
     widget->setStyle ( widgetExtraStyle );
@@ -10334,7 +10334,7 @@
                                  ( QVariant )
                                  "UTF-8" ).toString();
 #endif
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
             QString fromCode=st.setting()->value (
                                  sid+"/iconvfrom",
                                  ( QVariant ) tr (
@@ -11544,7 +11544,7 @@
     else
         pixmap=*(sessionExplorer->getLastSession()->sessIcon());
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 
     XStoreName(QX11Info::display(), proxyWinId, title.toLocal8Bit().data());
 
@@ -11591,7 +11591,7 @@
 void ONMainWindow::slotSetProxyWinFullscreen()
 {
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 
     QRect geom=QApplication::desktop()->screenGeometry(localDisplayNumber-1);
     Atom atom = XInternAtom ( QX11Info::display(), "_NET_WM_STATE_FULLSCREEN", True );
@@ -11647,7 +11647,7 @@
         ", h: "+ QString("%1").arg(geom.height());
     x2goDebug<<"Resizing proxy window to fit display: " + QString("%1").arg(disp) + " " + geoStr;
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     XSync(QX11Info::display(),false);
     XMoveResizeWindow(QX11Info::display(), proxyWinId, geom.x(), geom.y(), 800, 600);
     XMapWindow(QX11Info::display(), proxyWinId);
@@ -11667,7 +11667,7 @@
         return QRect();
     return proxyRect;
 #endif
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     QRect proxyRect;
     Window root;
     int x,y;
@@ -11754,7 +11754,7 @@
         xinSizeInc=1;
     else
         xinSizeInc=-1;
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     lastDisplayGeometry.setWidth(lastDisplayGeometry.width()+xinSizeInc);
     XSync(QX11Info::display(),false);
     XResizeWindow(QX11Info::display(), proxyWinId,
@@ -11893,7 +11893,7 @@
     setStatStatus();
     act_embedContol->setText ( tr ( "Attach X2Go window" ) );
     act_embedContol->setIcon ( QIcon ( iconsPath("/32x32/attach.png" ) ));
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     //if QX11EmbedContainer cannot embed window, check if window exists
     //and reconnect
     if ( !embedControlChanged )
@@ -12301,7 +12301,7 @@
 
 void ONMainWindow::slotChangeKbdLayout(const QString& layout)
 {
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     QStringList args;
     args<<"-layout"<<layout;
 
@@ -12378,7 +12378,7 @@
     pass->setEchoMode ( QLineEdit::Password );
     pass->setFocus();
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     connect ( login,SIGNAL ( clicked() ),this,
               SLOT ( slotActivateWindow() ) );
     connect ( pass,SIGNAL ( clicked() ),this,
@@ -13354,7 +13354,7 @@
     dr.rmdir ( path );
 }
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 long ONMainWindow::X11FindWindow ( QString text, long rootWin )
 {
     Window    wParent;
@@ -13395,7 +13395,7 @@
 long ONMainWindow::findWindow ( QString text )
 {
     x2goDebug<<"Searching window with title: " + text;
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     return X11FindWindow ( text );
 #endif
 #ifdef Q_OS_WIN
--- a/src/onmainwindow.h
+++ b/src/onmainwindow.h
@@ -797,7 +797,7 @@
     bool newSession;
     bool runStartApp;
     bool ldapOnly;
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     bool directRDP;
 #endif
 
@@ -910,7 +910,7 @@
     QRect dispGeometry;
 #endif
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     long image, shape;
 #endif
 
@@ -1196,7 +1196,7 @@
 
 private:
     void resizeProxyWinOnDisplay(int display);
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     long X11FindWindow ( QString text, long rootWin=0 );
 #endif
     void addToAppNames ( QString intName, QString transName );
@@ -1222,7 +1222,7 @@
     void printSshDError_noAuthorizedKeysFile();
     void loadPulseModuleNativeProtocol();
     void initEmbedToolBar();
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     void startDirectRDP();
 #endif
     void filterDesktops ( const QString& filter,
--- a/src/onmainwindow_privat.h
+++ b/src/onmainwindow_privat.h
@@ -87,11 +87,9 @@
 #include "contest.h"
 
 #if !defined Q_OS_WIN
-#include <sys/mount.h>
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 #include <X11/Xatom.h>
 #include <X11/xpm.h>
-#include <linux/fs.h>
 #endif // Q_OS_LINUX
 #endif // !defined Q_OS_WIN
 
@@ -153,7 +151,7 @@
 #include <QHostInfo>
 #endif
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 #if QT_VERSION < 0x050000
 #include <QX11Info>
 #else
--- a/src/pulsemanager.cpp
+++ b/src/pulsemanager.cpp
@@ -135,7 +135,7 @@
 #elif defined (Q_OS_WIN)
   server_working_dir_ = QString (app_dir_ + "/pulse/");
   server_binary_ = QString (app_dir_ + "/pulse/pulseaudio.exe");
-#elif defined (Q_OS_LINUX)
+#elif defined (Q_OS_LINUX) || defined (Q_OS_FREEBSD_KERNEL) || defined (Q_OS_HURD)
   std::ssize_t path_len = pathconf (".", _PC_PATH_MAX);
 
   if (-1 == path_len) {
@@ -206,7 +206,7 @@
     start_osx ();
 #elif defined (Q_OS_WIN)
     start_win ();
-#elif defined (Q_OS_LINUX)
+#elif defined (Q_OS_LINUX) || defined (Q_OS_FREEBSD_KERNEL) || defined (Q_OS_HURD)
     start_linux ();
 #endif // defined (Q_OS_DARWIN)
   }
--- a/src/sessionbutton.cpp
+++ b/src/sessionbutton.cpp
@@ -484,7 +484,7 @@
     }
     else if ( command =="RDP" )
     {
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
         if (st->setting()->value ( sid+"/directrdp",
                                    ( QVariant ) false ).toBool())
             directRDP=true;
@@ -495,7 +495,7 @@
     }
     else if ( command =="XDMCP" )
     {
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
         if (st->setting()->value ( sid+"/directxdmcp",
                                    ( QVariant ) false ).toBool()) {
             directRDP=true;
--- a/src/sessionwidget.cpp
+++ b/src/sessionwidget.cpp
@@ -95,7 +95,7 @@
     sshPort->setMinimum ( 0 );
     sshPort->setMaximum ( 65535 );
     sshPort->setToolTip (ssh_port_tooltip_text);
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     rdpPort=new QSpinBox ( sgb );
     rdpPort->setValue ( mainWindow->getDefaultSshPort().toInt() );
     rdpPort->setMinimum ( 0 );
@@ -127,7 +127,7 @@
     elLay->addWidget ( server );
     elLay->addWidget ( uname );
     elLay->addWidget ( sshPort );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     elLay->addWidget ( rdpPort );
 #endif
     suLay->addLayout ( slLay );
@@ -254,7 +254,7 @@
         sessLay->addSpacing ( 15 );
     sessLay->addWidget ( sgb );
     sessLay->addWidget ( deskSess );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     cbDirectRDP=new QCheckBox(tr("Direct RDP connection"), deskSess);
     cmdLay->addWidget(cbDirectRDP,2,0,1,6);
     cbDirectRDP->hide();
@@ -292,7 +292,7 @@
     connect (server, SIGNAL(textChanged(const QString&)),this, SLOT(slot_emitSettings()));
     connect (uname, SIGNAL(textChanged(const QString&)),this, SLOT(slot_emitSettings()));
     connect (cbKrbLogin, SIGNAL(clicked(bool)), this, SLOT(slot_krbChecked()));
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     connect (rdpPort, SIGNAL(valueChanged(int)),this, SLOT(slot_emitSettings()));
 #endif
 
@@ -376,7 +376,7 @@
 }
 
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 void SessionWidget::slot_rdpDirectClicked()
 {
     bool isDirectRDP=cbDirectRDP->isChecked();
@@ -488,7 +488,7 @@
 {
     leCmdIp->setText ( tr ( "Command:" ) );
     pbAdvanced->hide();
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     cbDirectRDP->hide();
 #endif
     leCmdIp->show();
@@ -516,7 +516,7 @@
                 leCmdIp->setText ( tr ( "Server:" ) );
                 pbAdvanced->show();
                 cmd->setText ( rdpServer );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
                 cbDirectRDP->show();
 #endif
             }
@@ -524,7 +524,7 @@
             {
                 leCmdIp->setText ( tr ( "XDMCP server:" ) );
                 cmd->setText ( xdmcpServer );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
                 cbDirectRDP->show();
                 cbDirectRDP->setText(tr ("direct XDMCP connection"));
 #endif
@@ -536,7 +536,7 @@
             cmd->setText ( "" );
         }
     }
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     slot_rdpDirectClicked();
 #endif
 }
@@ -611,7 +611,7 @@
             sessionId+"/sshport",
             ( QVariant ) mainWindow->getDefaultSshPort().toInt()
         ).toInt() );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     rdpPort->setValue (
         st.setting()->value (
             sessionId+"/rdpport",3389
@@ -699,7 +699,7 @@
                                     ( QVariant ) "" ).toString().trimmed();
     xdmcpServer=st.setting()->value ( sessionId+"/xdmcpserver",
                                       ( QVariant ) "localhost" ).toString().trimmed();
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     if(st.setting()->value (sessionId+"/directrdp",false ).toBool())
     {
         cbDirectRDP->setChecked(true);
@@ -773,7 +773,7 @@
             cmd->setEnabled ( true );
             cmd->setText ( rdpServer );
             pbAdvanced->show();
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
             cbDirectRDP->show();
             slot_rdpDirectClicked();
 #endif
@@ -784,7 +784,7 @@
             sessBox->setCurrentIndex ( XDMCP );
             cmd->setEnabled ( true );
             cmd->setText ( xdmcpServer );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
             cbDirectRDP->show();
             slot_rdpDirectClicked();
 #endif
@@ -804,7 +804,7 @@
 
     cbKdrive->setChecked(st.setting()->value (sessionId+"/kdrive", false).toBool() );
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     slot_rdpDirectClicked();
 #endif
     slot_krbChecked();
@@ -830,7 +830,7 @@
     icon->setIcon ( QIcon ( sessIcon ) );
     sshPort->setValue (
         mainWindow->getDefaultSshPort().toInt() );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     rdpPort->setValue (3389);
 #endif
 
@@ -876,7 +876,7 @@
 
     st.setting()->setValue ( sessionId+"/key",
                              ( QVariant ) key->text().trimmed() );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     st.setting()->setValue ( sessionId+"/rdpport",
                              ( QVariant ) rdpPort->value() );
 #endif
@@ -885,7 +885,7 @@
     st.setting()->setValue(sessionId+"/autologin",( QVariant ) cbAutoLogin->isChecked());
     st.setting()->setValue(sessionId+"/krblogin",( QVariant ) cbKrbLogin->isChecked());
     st.setting()->setValue(sessionId+"/krbdelegation",( QVariant ) cbKrbDelegation->isChecked());
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     st.setting()->setValue(sessionId+"/directrdp",( QVariant ) cbDirectRDP->isChecked());
     st.setting()->setValue(sessionId+"/directxdmcp",( QVariant ) cbDirectRDP->isChecked());
 #endif
@@ -981,7 +981,7 @@
     return sessName->text();
 }
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 void SessionWidget::slot_emitSettings()
 {
     emit settingsChanged(server->text(), QString::number( rdpPort->value()), uname->text());
--- a/src/sessionwidget.h
+++ b/src/sessionwidget.h
@@ -53,7 +53,7 @@
     void slot_krbChecked();
     void slot_openFolder();
 public slots:
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     void slot_rdpDirectClicked();
     void slot_emitSettings();
 #endif
@@ -66,14 +66,14 @@
     QSpinBox* sshPort;
     ONMainWindow* parent;
     bool newSession;
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     QSpinBox* rdpPort;
 #endif
     QLineEdit* key;
     QCheckBox* cbAutoLogin;
     QCheckBox* cbKrbLogin;
     QCheckBox* cbKrbDelegation;
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     QCheckBox* cbDirectRDP;
 #endif
     QString sessIcon;
@@ -111,7 +111,7 @@
     void readConfig();
 signals:
     void nameChanged ( const QString & );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     void directRDP(bool, bool);
     void settingsChanged(const QString &, const QString &, const QString &);
 #endif
--- a/src/settingswidget.cpp
+++ b/src/settingswidget.cpp
@@ -199,7 +199,7 @@
     setLay->addWidget ( dgb );
     setLay->addWidget ( clipGr );
     setLay->addWidget ( kgb );
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 #ifdef CFGCLIENT
     rdpBox=new QGroupBox ( tr ( "RDP client" ),this );
     setLay->addWidget ( rdpBox );
@@ -301,7 +301,7 @@
 }
 
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 void SettingsWidget::setDirectRdp(bool direct, bool isXDMCP)
 {
     clipGr->setVisible(!direct);
@@ -417,7 +417,7 @@
             displayNumber->setValue(1);
     }
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 #ifdef CFGCLIENT
     maxRes->setChecked(st.setting()->value ( sessionId+"/maxdim", false).toBool());
     QString client=st.setting()->value ( sessionId+"/rdpclient","rdesktop").toString();
@@ -553,7 +553,7 @@
     st.setting()->setValue ( sessionId+"/display",
                              ( QVariant ) displayNumber->value() );
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 #ifdef CFGCLIENT
     st.setting()->setValue ( sessionId+"/maxdim",
                              ( QVariant ) maxRes->isChecked() );
@@ -663,7 +663,7 @@
     st.setting()->sync();
 }
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
 void SettingsWidget::setServerSettings(QString server, QString port, QString user)
 {
     this->server=server;
--- a/src/settingswidget.h
+++ b/src/settingswidget.h
@@ -43,7 +43,7 @@
     ~SettingsWidget();
     void setDefaults();
     void saveSettings();
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     void setDirectRdp(bool direct, bool isXDMCP);
 public slots:
     void setServerSettings(QString server, QString port, QString user);
@@ -87,7 +87,7 @@
     QRadioButton *rbClipClient;
     QRadioButton *rbClipNone;
 
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     QGroupBox *rdpBox;
     QRadioButton* rRdesktop;
     QRadioButton* rXfreeRDPOld;
--- a/src/sharewidget.cpp
+++ b/src/sharewidget.cpp
@@ -240,7 +240,7 @@
                                            ( QVariant )
                                            "UTF-8" ).toString();
 #endif
-#ifdef Q_OS_LINUX
+#if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD_KERNEL) || defined(Q_OS_HURD)
     QString fromCode=st.setting()->value ( sessionId+"/iconvfrom",
                                            ( QVariant ) tr (
                                                    "ISO8859-1" ) ).toString();
--- a/src/InteractionDialog.cpp
+++ b/src/InteractionDialog.cpp
@@ -87,7 +87,7 @@
     textEdit->setFrameStyle ( QFrame::StyledPanel|QFrame::Plain );
     cancelButton->setFlat(true);
 
-#ifndef Q_OS_LINUX
+#if defined(Q_OS_DARWIN) || defined(Q_OS_WIN)
     QStyle* widgetExtraStyle;
 #if QT_VERSION < 0x050000
     widgetExtraStyle = new QPlastiqueStyle ();
